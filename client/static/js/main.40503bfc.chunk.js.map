{"version":3,"sources":["utilites/index.js","api/youtube.js","components/SearchBar/index.js","components/YoutubeVideo/utils.js","components/YoutubeVideo/index.js","components/NavBar/index.js","components/RoomChat/index.js","App.js","index.js"],"names":["THROTTLE","getSearchItems","query","a","searchUrl","URL","searchParams","append","process","fetch","href","res","json","data","items","throttle","executeFunction","delay","event","clearTimeout","setTimeout","SearchBar","setVideoId","useState","searchResult","setSearchResult","searchBar","setSearchBar","onSearchBarChange","e","target","value","length","normalizedMap","map","item","id","videoId","title","snippet","channelTitle","videoImage","thumbnails","high","submitVideoHandler","className","onChange","placeholder","type","video","src","url","alt","onClick","class","listeners","window","onYouTubeIframeAPIReady","forEach","listener","lastId","loaded","YoutubeVideo","socket","roomId","joinSync","currentId","useRef","current","player","playerLoaded","setPlayerIsLoaded","playerId","isLocalEvent","shouldMatch","localPlayer","isLocalVideoLoad","currentVideoId","setLocalEvent","useEffect","l","push","addListener","listenerToRemove","filter","tag","document","createElement","body","YT","Player","height","width","playerVars","playsinline","addEventListener","onPlayerStateChange","removeEventListener","emit","currentData","time","playerInfo","currentTime","loadVideoById","newVideoId","on","seekTo","Math","round","playVideo","pauseVideo","newSocketId","state","getPlayerState","off","NavBar","setRoomId","setJoinSync","React","joinRoomId","setJoinRoomId","location","reload","createdRoomId","floor","random","toString","onSubmit","preventDefault","RoomChat","pepe","userName","setUserName","newMessage","setNewMessage","chatLog","setChatLog","name","setName","nameButton","setNameButton","message","textColor","localStorage","getItem","removeItem","setItem","style","color","App","mySocket","setMySocket","io","connect","transports","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.40503bfc.chunk.js","sourcesContent":["let THROTTLE;\r\nfunction throttle(executeFunction, delay, event) {\r\n  clearTimeout(THROTTLE);\r\n  THROTTLE = setTimeout(() => executeFunction(event), delay);\r\n}\r\nexport default throttle;\r\n","const NUMBER_OF_ITEMS = 8;\r\nconst { REACT_APP_YOUTUBE_API_KEY } = process.env;\r\nconst YOUTUBE_API_URL = \"https://www.googleapis.com/youtube/v3\";\r\n\r\nexport const getSearchItems = async (query) => {\r\n  const searchUrl = new URL(`${YOUTUBE_API_URL}/search`);\r\n  searchUrl.searchParams.append(\"part\", \"snippet\");\r\n  searchUrl.searchParams.append(\"key\", REACT_APP_YOUTUBE_API_KEY);\r\n  searchUrl.searchParams.append(\"type\", \"video\");\r\n  searchUrl.searchParams.append(\"maxResults\", NUMBER_OF_ITEMS);\r\n  searchUrl.searchParams.append(\"q\", query);\r\n\r\n  const res = await fetch(searchUrl.href);\r\n  const data = await res.json();\r\n  return data.items;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { getSearchItems } from \"../../api/youtube\";\r\nimport throttle from \"../../utilites\";\r\nimport \"./searchBar.css\";\r\n\r\nfunction SearchBar({ setVideoId }) {\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [searchBar, setSearchBar] = useState(\"\");\r\n\r\n  const onSearchBarChange = async (e) => {\r\n    if (e.target.value.length === 0) return setSearchResult([]);\r\n    // calls to api\r\n    const items = await getSearchItems(e.target.value);\r\n    //No searched videos\r\n    //Normalize Result\r\n    const normalizedMap = items.map((item) => {\r\n      return {\r\n        id: item.id.videoId,\r\n        title: item.snippet.title,\r\n        channelTitle: item.snippet.channelTitle,\r\n        videoImage: item.snippet.thumbnails.high,\r\n      };\r\n    });\r\n    // Putting Normalized data on state\r\n    setSearchResult(normalizedMap);\r\n  };\r\n\r\n  const submitVideoHandler = (e) => {\r\n    setVideoId(e.target.id);\r\n    setSearchBar(\"\");\r\n  };\r\n  return (\r\n    <div className=\"search-bar-container\">\r\n      <input\r\n        id=\"search-bar\"\r\n        className=\"search-bar\"\r\n        onChange={(event) => {\r\n          throttle(onSearchBarChange, 500, event);\r\n          setSearchBar(event.target.value);\r\n        }}\r\n        placeholder=\"Search video...\"\r\n        type=\"search\"\r\n        value={searchBar}\r\n      />\r\n      <ul>\r\n        {searchBar\r\n          ? searchResult.map((video) => (\r\n              <li key={video.id} className=\"video\">\r\n                <img\r\n                  src={video.videoImage.url}\r\n                  alt=\"\"\r\n                  className=\"video-image\"\r\n                />\r\n                <div className=\"video-info-container\">\r\n                  <h3>{video.title}</h3>\r\n                  <p>{video.channelTitle}</p>\r\n                </div>\r\n                <buttom className=\"video-button\">\r\n                  <i\r\n                    id={video.id}\r\n                    onClick={submitVideoHandler}\r\n                    class=\"fas fa-play\"\r\n                  ></i>\r\n                </buttom>\r\n              </li>\r\n            ))\r\n          : null}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","let listeners = []\r\n\r\nexport const addListener = listener => listeners.push(listener)\r\n\r\nexport const removeListener = listenerToRemove => {\r\n  listeners = listeners.filter(listener => listener !== listenerToRemove)\r\n}\r\n\r\nwindow.onYouTubeIframeAPIReady = () => {\r\n  listeners.forEach(listener => {\r\n    listener(true)\r\n  })\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { addListener, removeListener } from \"./utils\";\r\nimport \"./youtubeVideo.css\";\r\nlet lastId = 0;\r\nlet loaded = false;\r\n\r\nfunction YoutubeVideo({ videoId, socket, roomId, joinSync, setVideoId }) {\r\n  const currentId = useRef(lastId).current;\r\n  const player = useRef(null);\r\n  const [playerLoaded, setPlayerIsLoaded] = useState(loaded);\r\n  const playerId = `player-${currentId}`;\r\n  const isLocalEvent = useRef({\r\n    shouldMatch: null,\r\n    localPlayer: true,\r\n  });\r\n  const isLocalVideoLoad = useRef(true);\r\n  const currentVideoId = useRef(videoId);\r\n\r\n  // setLocalEvent Handler\r\n\r\n  function setLocalEvent(event) {\r\n    switch (event) {\r\n      case \"play\":\r\n        isLocalEvent.current = {\r\n          localPlayer: false,\r\n          shouldMatch: 1,\r\n        };\r\n        break;\r\n      case \"stop\":\r\n        isLocalEvent.current = {\r\n          localPlayer: false,\r\n          shouldMatch: 2,\r\n        };\r\n        break;\r\n      case \"loadVideo\":\r\n        isLocalVideoLoad.current = false;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // YoutubeVideo ID Handler\r\n  useEffect(() => (lastId += 1), []);\r\n\r\n  // Youtube API Call when finished loading listener\r\n  useEffect(() => {\r\n    const listener = (l) => {\r\n      setPlayerIsLoaded(l);\r\n      loaded = l;\r\n    };\r\n    addListener(listener);\r\n    return () => removeListener(listener);\r\n  }, []);\r\n\r\n  // Iframe Youtube API Load\r\n  useEffect(() => {\r\n    if (playerLoaded) return;\r\n    const tag = document.createElement(\"script\");\r\n    tag.src = \"https://www.youtube.com/iframe_api\";\r\n    document.body.append(tag);\r\n  }, [playerLoaded]);\r\n\r\n  // Youtube player init\r\n  useEffect(() => {\r\n    if (!playerLoaded) return;\r\n    player.current = new window.YT.Player(playerId, {\r\n      setVideoId,\r\n      height: 500,\r\n      width: 889,\r\n      videoId,\r\n      playerVars: {\r\n        playsinline: 1,\r\n      },\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [playerLoaded, playerId]);\r\n\r\n  // Player event listeneer\r\n  useEffect(() => {\r\n    if (!playerLoaded) return;\r\n    function onPlayerStateChange(event) {\r\n      if (!roomId || !socket) return;\r\n      if (isLocalEvent.current.localPlayer) {\r\n        switch (event.data) {\r\n          case 1:\r\n            socket.emit(\"serverEventsHandler\", {\r\n              type: \"playerEvent\",\r\n              event: \"PLAY\",\r\n              roomId: roomId,\r\n              currentData: { time: player.current.playerInfo.currentTime },\r\n            });\r\n            break;\r\n          case 2:\r\n            socket.emit(\"serverEventsHandler\", {\r\n              type: \"playerEvent\",\r\n              event: \"PAUSE\",\r\n              roomId: roomId,\r\n            });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      if (isLocalEvent.current.shouldMatch === event.data) {\r\n        isLocalEvent.current = {\r\n          shouldMatch: null,\r\n          localPlayer: true,\r\n        };\r\n      }\r\n    }\r\n    player.current.addEventListener(\"onStateChange\", onPlayerStateChange);\r\n    return () => {\r\n      player.current.removeEventListener(\"onStateChange\", onPlayerStateChange);\r\n    };\r\n  }, [playerLoaded, roomId, socket]);\r\n\r\n  // Load new video Function\r\n  useEffect(() => {\r\n    if (!player.current || !videoId) return;\r\n    setLocalEvent(\"play\");\r\n    player.current.loadVideoById(videoId);\r\n    currentVideoId.current = videoId;\r\n    if (roomId && isLocalVideoLoad.current) {\r\n      socket.emit(\"serverEventsHandler\", {\r\n        type: \"loadVideo\",\r\n        roomId: roomId,\r\n        currentData: { newVideoId: videoId },\r\n      });\r\n    } else isLocalVideoLoad.current = true;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [videoId, socket]);\r\n\r\n  //  SockerIO Listeneer\r\n  useEffect(() => {\r\n    if (!socket || !roomId) return;\r\n    //Joining Rooms\r\n    socket.emit(\"roomHandler\", { roomId, joinSync });\r\n    //Server Listeneer\r\n    socket.on(\"serverEventsHandler\", ({ type, event, currentData }) => {\r\n      switch (type) {\r\n        case \"playerEvent\":\r\n          if (event === \"PLAY\") {\r\n            setLocalEvent(\"play\");\r\n            player.current.seekTo(Math.round(currentData.time + 0.5), true);\r\n            setTimeout(() => {\r\n              player.current.playVideo();\r\n            }, 250);\r\n          } else if (event === \"PAUSE\") {\r\n            setLocalEvent(\"stop\");\r\n            player.current.pauseVideo();\r\n          }\r\n          break;\r\n\r\n        case \"loadVideo\":\r\n          setLocalEvent(\"loadVideo\");\r\n          setVideoId(currentData.newVideoId);\r\n          break;\r\n\r\n        case \"joinAskData\":\r\n          socket.emit(\"serverEventsHandler\", {\r\n            type: \"sendJoinedData\",\r\n            currentData: {\r\n              newVideoId: currentVideoId.current,\r\n              newSocketId: currentData.newSocketId,\r\n              time: player.current.playerInfo.currentTime,\r\n              state: player.current.getPlayerState(),\r\n            },\r\n          });\r\n          break;\r\n\r\n        case \"recieveCurrentData\":\r\n          //load video\r\n          if (currentData.newVideoId !== videoId) {\r\n            setLocalEvent(\"loadVideo\");\r\n            setVideoId(currentData.newVideoId);\r\n          }\r\n          //Put time and state on local player\r\n          setTimeout(() => {\r\n            if (currentData.state === 1 || currentData.state === 3) {\r\n              setLocalEvent(\"play\");\r\n              player.current.seekTo(Math.round(currentData.time + 1), true);\r\n            } else {\r\n              setLocalEvent(\"play\");\r\n              player.current.seekTo(Math.round(currentData.time + 1), true);\r\n              setTimeout(() => {\r\n                setLocalEvent(\"stop\");\r\n                player.current.pauseVideo();\r\n              }, 500);\r\n            }\r\n          }, 2000);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    return () => socket.off(\"roomHandler\");\r\n  }, [joinSync, roomId, setVideoId, socket, videoId]);\r\n\r\n  return (\r\n    <div className=\"video-container\">\r\n      <div className=\"video-display\" id={playerId}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default YoutubeVideo;\r\n","import React from \"react\";\r\nimport \"./NavBar.css\";\r\n\r\nfunction NavBar({ roomId, setRoomId, setJoinSync }) {\r\n  const [joinRoomId, setJoinRoomId] = React.useState(\"\");\r\n\r\n  const createRoomHandler = (e) => {\r\n    let createdRoomId = Math.floor(1000 + Math.random() * 9000).toString();\r\n    setRoomId(createdRoomId);\r\n  };\r\n\r\n  const joinRoomHandler = (e) => {\r\n    e.preventDefault();\r\n    if (joinRoomId.length !== 4) return;\r\n    setJoinSync(true);\r\n    setRoomId(joinRoomId);\r\n    setJoinRoomId(\"\");\r\n  };\r\n\r\n  const leaveRoomHandler = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"nav-container\">\r\n      {roomId ? (\r\n        <div className=\"room-info-container\">\r\n          <p className=\"room-info\"> Your room ID: {roomId}</p>\r\n          <button onClick={leaveRoomHandler} className=\"create-room-button\">\r\n            LEAVE ROOM\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"room-info-container\">\r\n          <button className=\"create-room-button\" onClick={createRoomHandler}>\r\n            CREATE ROOM\r\n          </button>\r\n          <form className=\"join-container\" onSubmit={joinRoomHandler}>\r\n            <input\r\n              className=\"join-room-input\"\r\n              placeholder=\" Enter room ID\"\r\n              value={joinRoomId}\r\n              onChange={(e) => setJoinRoomId(e.target.value)}\r\n            ></input>\r\n            <button className=\"join-room-button\">JOIN ROOM</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./RoomChat.css\";\r\n\r\nfunction RoomChat({ roomId, socket, pepe }) {\r\n  const [userName, setUserName] = useState(null);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [chatLog, setChatLog] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [nameButton, setNameButton] = useState(true);\r\n\r\n  // Send Messages\r\n  const sendMessageHandler = (e) => {\r\n    e.preventDefault();\r\n    setChatLog([\r\n      ...chatLog,\r\n      { message: newMessage, name: userName, textColor: \"rgb(180, 80, 80)\" },\r\n    ]);\r\n    socket.emit(\"chatHandler\", { newMessage, userName, roomId });\r\n    setNewMessage(\"\");\r\n  };\r\n\r\n  const changeNameHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!name) return setNameButton(true);\r\n    if (name.length > 22) return;\r\n    localStorage.removeItem(\"userName\");\r\n    localStorage.setItem(\"userName\", name);\r\n    setUserName(name);\r\n    setName(\"\");\r\n    setNameButton(true);\r\n  };\r\n\r\n  // hear incoming Messages\r\n  useEffect(() => {\r\n    if (!socket || !roomId) return;\r\n    socket.on(\"chatHandler\", ({ newMessage, userName }) => {\r\n      setChatLog([\r\n        ...chatLog,\r\n        { message: newMessage, name: userName, textColor: \"rgb(80, 80, 180)\" },\r\n      ]);\r\n    });\r\n    return () => socket.off(\"chatHandler\");\r\n  }, [socket, roomId, chatLog]);\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"userName\")) return setUserName(\"New Astronaut\");\r\n    setUserName(localStorage.getItem(\"userName\"));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"room-chat-container\">\r\n      <form onSubmit={changeNameHandler}>\r\n        {nameButton ? (\r\n          <button className=\"name-btn\" onClick={() => setNameButton(false)}>\r\n            Change name\r\n          </button>\r\n        ) : (\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            placeholder=\"Change name.. (max 20 characters)\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            value={name}\r\n          ></input>\r\n        )}\r\n      </form>\r\n      <div className=\"chat-container\">\r\n        <ul className=\"chat-messages-container\">\r\n          {chatLog.map((data) => (\r\n            <li className=\"message-li\">\r\n              <p className=\"chat-name\" style={{ color: data.textColor }}>\r\n                {data.name}\r\n              </p>\r\n              <div className=\"message-text\">{data.message}</div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <form onSubmit={sendMessageHandler}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"input\"\r\n          placeholder=\"Send message..\"\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          value={newMessage}\r\n        ></input>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default RoomChat;\r\n","import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport YoutubeVideo from \"./components/YoutubeVideo\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport { io } from \"socket.io-client\";\r\nimport RoomChat from \"./components/RoomChat\";\r\n\r\nfunction App() {\r\n  const [videoId, setVideoId] = useState(\"uD4izuDMUQA\");\r\n  const [roomId, setRoomId] = useState(null);\r\n  const [joinSync, setJoinSync] = useState(false);\r\n  const [mySocket, setMySocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const socket = io.connect(\"https://sync-yt-video.herokuapp.com/\", {\r\n      transports: [\"websocket\"],\r\n    });\r\n    setMySocket(socket);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <SearchBar setVideoId={setVideoId} />\r\n      <main className=\"main-container\">\r\n        <NavBar\r\n          roomId={roomId}\r\n          setRoomId={setRoomId}\r\n          setJoinSync={setJoinSync}\r\n        />\r\n\r\n        <div className=\"deep-main-container\">\r\n          <YoutubeVideo\r\n            setVideoId={setVideoId}\r\n            videoId={videoId}\r\n            socket={mySocket}\r\n            roomId={roomId}\r\n            joinSync={joinSync}\r\n          />\r\n          {mySocket ? <RoomChat socket={mySocket} roomId={roomId} /> : null}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}